esphome:
  name: petlibro-plaf101
  friendly_name: Petlibro PLAF101

esp8266:
  board: nodemcuv2

logger:

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

captive_portal:

api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

button:
  - platform: template
    name: "Feed"
    icon: "mdi:cat"
    on_press:
      - logger.log: "Button pressed"

binary_sensor:
  # Physical buttons on the front
  - platform: gpio
    name: "REC_KEY (GPIO0)"
    id: sensor_rec_key
    pin:
      number: GPIO00
      mode:
        input: true
        pullup: false
    filters:
      - invert:

  - platform: gpio
    name: "FEED_KEY (GPIO4)"
    id: sensor_feed_key
    pin:
      number: GPIO04
      mode:
        input: true
        pullup: false
    filters:
      - invert:

  - platform: gpio
    name: "SET_KEY (GPIO13)"
    id: sensor_button_set_key
    pin:
      number: GPIO13
      mode:
        input: true
        pullup: false
    filters:
      - invert:

  # Endstop on motor axle, detects 60deg rotation increments
  # TODO: Solder this connection
  - platform: gpio
    name: "M_DET (GPIO12)"
    id: sensor_motor_rotation
    pin:
      number: GPIO12
      mode:
        input: true
        pullup: true
    filters:
      - invert:

sensor:
  - platform: uptime
    type: seconds
    name: Uptime Sensor

output:
  - platform: gpio
    pin:
      number: GPIO02
      mode: output
    id: led_on_board
    inverted: true

  - platform: gpio
    pin:
      number: GPIO14
      mode: output
    id: led2_blue
    inverted: true

  - platform: gpio
    pin:
      number: GPIO16
      mode: output
    id: led1_red
    inverted: true

# switch:
#   # We only need the motor to spin in one direction, so
#   # grounding in_a while driving in_b high should be enough.
#   # pin 3 (in_b) straight to GPIO5
#   - platform: gpio
#     name: motor
#     icon: "mdi:fan"
#     id: motor_driver_in_b
#     pin:
#       number: GPIO5
#       mode: output
#     on_turn_on:
#       - switch.turn_on: motor_driver_in_b
#     on_turn_off:
#       - switch.turn_off: motor_driver_in_b
